version: '3.8'
services:
  nginx:
    container_name: java-nginx
    build:
      dockerfile: nginx.dockerfile
      context: .
    image: nginx
    restart: always
    ports:
    - "80:80"
    networks:
      - api-network
    volumes:
    - ./nginx/conf.d:/etc/nginx/conf.d
    - ./templates:/etc/nginx/templates
    depends_on:
    - app-01
    - app-02

  postgresdb:
    image: postgres
    restart: always
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=Ta2506f
     - POSTGRES_DB=postgresdb
    ports:
      - "5432:5432"
    networks:
      - api-network


  app-02:
    build:
      dockerfile: Dockerfile
      context: .
    image: api_app
    container_name: api_app-02
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ta2506f
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8008"
    networks:
      - api-network
    depends_on:
      - "postgresdb"

  app-01:
    build:
      dockerfile: Dockerfile
      context: .
    image: api_app
    container_name: api_app-01
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresdb:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ta2506f
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - "8008"
    networks:
      - api-network
    depends_on:
      - "postgresdb"   

networks:
  api-network:
    driver: bridge